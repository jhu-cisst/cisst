#
# (C) Copyright 2010-2024 Johns Hopkins University (JHU), All Rights Reserved.
#
# --- begin cisst license - do not edit ---
#
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
#
# --- end cisst license ---

# CMakeLists.txt for cisstMultiTask wrapping tests

# List of cisst libraries needed
set (CISST_LIBRARIES_NEEDED cisstCommon cisstVector cisstOSAbstraction cisstMultiTask)
cisst_set_directories (${CISST_LIBRARIES_NEEDED})

# Keep a list all tests for ctest
set (CTEST_TEST_FILE ${CMAKE_CURRENT_BINARY_DIR}/CTestTestfile-cisstMultiTaskPython.txt)
set (CTEST_TEST_FILE_AUTO ${CMAKE_CURRENT_BINARY_DIR}/CTestTestfile-cisstMultiTaskPython-auto.txt)
file (WRITE ${CTEST_TEST_FILE} "# File generated by CMake, do not modify\n")

# Allow generated c++ code to find header files
include_directories (${CMAKE_CURRENT_SOURCE_DIR})

# We are using C++ code that needs to be wrapped
add_library (cisstMultiTaskPythonTest SHARED
             mtsPeriodicTaskTest.h mtsPeriodicTaskTest.cpp)
set_property (TARGET cisstMultiTaskPythonTest PROPERTY FOLDER "cisstMultiTask/tests")
cisst_target_link_libraries (cisstMultiTaskPythonTest ${CISST_LIBRARIES_NEEDED})


# Allow generated c++ code to find header files
include_directories (${CMAKE_CURRENT_SOURCE_DIR})

# We are using C++ code
cisst_add_swig_module (MODULE cisstMultiTaskPythonTest
                       FOLDER "cisstMultiTask/tests"
                       MODULE_LINK_LIBRARIES cisstCommon cisstVector cisstMultiTaskPythonTest)

# Copy the .py file generated to wherever the libraries are
add_custom_command (TARGET cisstMultiTaskPythonTestPython
                    POST_BUILD
                    COMMAND ${CMAKE_COMMAND}
                    ARGS -E copy
                            ${CMAKE_CURRENT_BINARY_DIR}/cisstMultiTaskPythonTest.py
                            ${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/cisstMultiTaskPythonTest.py)

# Create the scripts from .in
set (LIB cisstMultiTask)
if (CMAKE_CONFIGURATION_TYPES)
  foreach (config ${CMAKE_CONFIGURATION_TYPES})
    configure_file (${cisst_SOURCE_DIR}/cisstTestsDriver/cisstTestsDriver.py.in
                    ${EXECUTABLE_OUTPUT_PATH}/${config}/cisstMultiTaskTests.py
                    IMMEDIATE @ONLY)
  endforeach (config)
else (CMAKE_CONFIGURATION_TYPES)
  configure_file (${cisst_SOURCE_DIR}/cisstTestsDriver/cisstTestsDriver.py.in
                  ${EXECUTABLE_OUTPUT_PATH}/cisstMultiTaskTests.py
                  IMMEDIATE @ONLY)
endif (CMAKE_CONFIGURATION_TYPES)

# Run the script to generate the list of tests automatically
if (WIN32)
  add_custom_target (cisstMultiTask_CREATE_PYTHON_TESTS_LIST ALL
                     COMMAND ${cisstTestsDriver_BINARY_DIR}/cisstTestsDriverPython.bat ${CMAKE_CFG_INTDIR}
                             ${EXECUTABLE_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/cisstMultiTaskTests.py ${CTEST_TEST_FILE_AUTO}
                     SOURCES ${TEST_PROGRAMS})
else (WIN32)
  add_custom_target (cisstMultiTask_CREATE_PYTHON_TESTS_LIST ALL
                     COMMAND ${Python_EXECUTABLE} ${EXECUTABLE_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/cisstMultiTaskTests.py
                             -d ${Python_EXECUTABLE} > ${CTEST_TEST_FILE_AUTO}
                     SOURCES ${TEST_PROGRAMS})
endif (WIN32)

set_property (TARGET cisstMultiTask_CREATE_PYTHON_TESTS_LIST PROPERTY FOLDER "cisstMultiTask/tests")

add_dependencies (cisstMultiTask_CREATE_PYTHON_TESTS_LIST
                  cisstCommon
                  cisstVector
                  cisstMultiTask
                  cisstCommonPython
                  cisstVectorPython
                  cisstOSAbstractionPython
                  cisstMultiTaskPython
                  cisstMultiTaskPythonTest
                  cisstMultiTaskPythonTestPython)

file (APPEND ${CTEST_TEST_FILE} "include (\"${CTEST_TEST_FILE_AUTO}\")\n")

# Add all the test lists
set_directory_properties (PROPERTIES TEST_INCLUDE_FILE
                          ${CTEST_TEST_FILE})
